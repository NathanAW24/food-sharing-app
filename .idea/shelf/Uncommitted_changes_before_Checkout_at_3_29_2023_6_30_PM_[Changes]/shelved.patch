Index: app/src/main/java/com/example/just_hungry/DeviceLocation.java
===================================================================
diff --git a/app/src/main/java/com/example/just_hungry/DeviceLocation.java b/app/src/main/java/com/example/just_hungry/DeviceLocationRetriever.java
rename from app/src/main/java/com/example/just_hungry/DeviceLocation.java
rename to app/src/main/java/com/example/just_hungry/DeviceLocationRetriever.java
--- a/app/src/main/java/com/example/just_hungry/DeviceLocation.java	
+++ b/app/src/main/java/com/example/just_hungry/DeviceLocationRetriever.java	
@@ -1,12 +1,12 @@
 package com.example.just_hungry;
 
-import android.content.Context;
+import android.Manifest;
+import android.app.Activity;
 import android.content.pm.PackageManager;
 import android.location.Location;
 import android.util.Log;
 
 import androidx.annotation.NonNull;
-import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.app.ActivityCompat;
 
 import com.example.just_hungry.models.LocationModel;
@@ -14,45 +14,48 @@
 import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
 
-import java.util.HashMap;
-
-public class DeviceLocation {
+public class DeviceLocationRetriever {
     private final static int COARSE_LOCATION_REQUEST_CODE = 100;
-    FusedLocationProviderClient fusedLocationClient;
 
-    private LocationModel getLastLocation(AppCompatActivity activity) {
 
-        Context activityContext = activity.getApplicationContext();
+    public LocationModel getDeviceLocation(Activity activity, FusedLocationProviderClient fusedLocationClient, LocationModel currentLocation){
+        System.out.println("FUSED LOCATION CLIENT INSIDE getLastLocation()" + fusedLocationClient);
 
-        LocationModel locationModel = new LocationModel();
-
-        if (ActivityCompat.checkSelfPermission(activityContext, android.Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
-            fusedLocationClient.getLastLocation()
-                    .addOnSuccessListener(new OnSuccessListener<Location>() {
+        if (ActivityCompat.checkSelfPermission(activity, android.Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
+            fusedLocationClient.getCurrentLocation(	100, null) // 100 is HIGH_ACCURACY
+                    .addOnSuccessListener(new OnSuccessListener<Location>() { // try addOnCompleteListener
                         @Override
                         public void onSuccess(Location location) {
                             System.out.println("location object " + location);
                             if (location != null) {
-                                System.out.println(String.valueOf(location.getLatitude()) + " " + String.valueOf(location.getLongitude()));
-                                locationModel.setLatitude(location.getLatitude());
-                                locationModel.setLongitude(location.getLongitude());
+                                double latitude = location.getLatitude();
+                                double longitude = location.getLongitude();
+                                System.out.println(String.valueOf(latitude) + " " + String.valueOf(longitude));
+                                currentLocation.setLatitude(latitude);
+                                currentLocation.setLongitude(longitude);
                             }
                         }
+
                     })
                     .addOnFailureListener(new OnFailureListener() {
                         @Override
                         public void onFailure(@NonNull Exception e) {
                             Log.e("TAG", "Exception: " + e.getMessage());
+                            System.out.println("KEGAGALAN HAKIKI " + e.getMessage());
                         }
-                    });
+                    })
+//                    .addOnCompleteListener()
+
+            ;
         } else {
-            askPermission(activity);
+            askPermission(activity, fusedLocationClient);
+            return getDeviceLocation(activity, fusedLocationClient, currentLocation);
         }
-        return locationModel;
+        return currentLocation;
     }
 
-    public void askPermission(AppCompatActivity activity) {
-        ActivityCompat.requestPermissions(activity, new String[]{android.Manifest.permission.ACCESS_FINE_LOCATION}, COARSE_LOCATION_REQUEST_CODE);
+    public void askPermission(Activity activity, FusedLocationProviderClient fusedLocationClient) {
+        ActivityCompat.requestPermissions(activity, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, COARSE_LOCATION_REQUEST_CODE);
     }
 
 
