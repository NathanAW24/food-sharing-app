Index: app/src/main/java/com/example/just_hungry/models/LocationModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.just_hungry.models;\r\n\r\npublic class LocationModel {\r\n\r\n    public double latitude;\r\n    public double longitude;\r\n\r\n    public LocationModel() {\r\n        //set to default value\r\n        this.latitude = 0;\r\n        this.longitude = 0;\r\n    }\r\n    public LocationModel(double latitude, double longitude) {\r\n        this.latitude = latitude;\r\n        this.longitude = longitude;\r\n    }\r\n    // getter and setter methods\r\n    public double getLatitude() {\r\n        return latitude;\r\n    }\r\n    public double getLongitude() {\r\n        return longitude;\r\n    }\r\n    public void setLatitude(double latitude) {\r\n        this.latitude = latitude;\r\n    }\r\n    public void setLongitude(double longitude) {\r\n        this.longitude = longitude;\r\n    }\r\n    public String getStringLocation() {\r\n       return (\"Latitude: \" + latitude + \" Longitude: \" + longitude);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/just_hungry/models/LocationModel.java b/app/src/main/java/com/example/just_hungry/models/LocationModel.java
--- a/app/src/main/java/com/example/just_hungry/models/LocationModel.java	
+++ b/app/src/main/java/com/example/just_hungry/models/LocationModel.java	
@@ -6,9 +6,9 @@
     public double longitude;
 
     public LocationModel() {
-        //set to default value
-        this.latitude = 0;
-        this.longitude = 0;
+        //set to default value, which is SUTD coordinates
+        this.latitude = 0; // 1.3402320075948917
+        this.longitude = 0; // 103.96296752039913
     }
     public LocationModel(double latitude, double longitude) {
         this.latitude = latitude;
Index: app/src/main/java/com/example/just_hungry/PostsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.just_hungry;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.example.just_hungry.models.PostModel;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\npublic class PostsFragment extends Fragment {\r\n\r\n    public ArrayList<PostModel> posts = new ArrayList<>();\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    RecyclerView postRecyclerView;\r\n    PostRecyclerAdapter adapter;\r\n\r\n    //scrolling stuff\r\n    private boolean loading = true;\r\n    int pastVisiblesItems, visibleItemCount, totalItemCount;\r\n    LinearLayoutManager mLayoutManager = new LinearLayoutManager(this.getContext());\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View rootView = inflater.inflate(R.layout.fragment_post_main, container, false);\r\n\r\n\r\n        postRecyclerView = (RecyclerView) rootView.findViewById(R.id.postRecyclerView);\r\n        Task<QuerySnapshot> postsQuery = db.collection(\"posts\").get();\r\n        OnGetDataListener listener = new OnGetDataListener() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                System.out.println(\"QuerySnapshot: \" + queryDocumentSnapshots);\r\n                posts.clear();\r\n                for (int i = 0; i < queryDocumentSnapshots.size(); i++) {\r\n                    HashMap<String, Object> post = (HashMap<String, Object>) queryDocumentSnapshots.getDocuments().get(i).getData();\r\n                    posts.add(new PostModel((DocumentSnapshot) queryDocumentSnapshots.getDocuments().get(i)));\r\n                    //posts.add(new PostModel(queryDocumentSnapshots.getDocuments().get(i).getData()));\r\n                    System.out.println(queryDocumentSnapshots.getDocuments().get(i).getData());\r\n                }\r\n                adapter = new PostRecyclerAdapter(rootView.getContext(), posts);\r\n                System.out.println(\"SETTONG UP ADAPTER DONE\" + posts);\r\n                postRecyclerView.setLayoutManager(mLayoutManager);\r\n                postRecyclerView.setAdapter(adapter);\r\n            }\r\n        };\r\n\r\n        final SwipeRefreshLayout pullToRefresh = rootView.findViewById(R.id.pullToRefresh);\r\n        pullToRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                GetAllPostsFirestore(listener); // your code\r\n                pullToRefresh.setRefreshing(false);\r\n            }\r\n        });\r\n        GetAllPostsFirestore(listener);\r\n        return rootView;\r\n    }\r\n\r\n\r\n    // FIREBASE STACK OVER FLOW STUFF\r\n    public interface OnGetDataListener {\r\n        //this is for callbacks\r\n        void onSuccess(QuerySnapshot dataSnapshotValue);\r\n    }\r\n    public void GetAllPostsFirestore(final OnGetDataListener listener) {\r\n        Task<QuerySnapshot> querySnapshotTask = db.collection(\"posts\").get();\r\n        querySnapshotTask.addOnSuccessListener(new OnSuccessListener<QuerySnapshot>(){\r\n\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                listener.onSuccess(queryDocumentSnapshots);\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/just_hungry/PostsFragment.java b/app/src/main/java/com/example/just_hungry/PostsFragment.java
--- a/app/src/main/java/com/example/just_hungry/PostsFragment.java	
+++ b/app/src/main/java/com/example/just_hungry/PostsFragment.java	
@@ -2,17 +2,28 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.core.app.ActivityCompat;
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
+import android.Manifest;
+import android.app.Activity;
+import android.bluetooth.BluetoothClass;
+import android.content.pm.PackageManager;
+import android.location.Location;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
+import com.example.just_hungry.models.LocationModel;
 import com.example.just_hungry.models.PostModel;
+import com.google.android.gms.location.FusedLocationProviderClient;
+import com.google.android.gms.location.LocationServices;
+import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.firestore.DocumentSnapshot;
@@ -20,6 +31,7 @@
 import com.google.firebase.firestore.QuerySnapshot;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashMap;
 
 public class PostsFragment extends Fragment {
@@ -33,6 +45,12 @@
     private boolean loading = true;
     int pastVisiblesItems, visibleItemCount, totalItemCount;
     LinearLayoutManager mLayoutManager = new LinearLayoutManager(this.getContext());
+    private final static int COARSE_LOCATION_REQUEST_CODE = 100;
+
+    FusedLocationProviderClient fusedLocationProviderClient;
+    LocationModel deviceLocation = new LocationModel(1.3402320075948917, 103.96296752039913); // instantiate on SUTD coordinates
+
+
 
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
@@ -40,11 +58,34 @@
 
 
         postRecyclerView = (RecyclerView) rootView.findViewById(R.id.postRecyclerView);
+
+
+//        // Get current activity
+//        Activity currActivity = (Activity) getActivity();
+//
+//        // FusedLocationProvider client
+//        FusedLocationProviderClient fusedLocationClient = LocationServices.getFusedLocationProviderClient(currActivity);
+//
+//        // Get Device Location Here
+//        DeviceLocation currDeviceLoc = new DeviceLocation();
+//        currDeviceLoc.getLastLocation(currActivity, fusedLocationClient); // must accept activity input
+//        System.out.println("LOCATION OF LATITUDE AND LONGITUDE " + String.valueOf(currDeviceLoc.getLatitude()) + " " + String.valueOf(currDeviceLoc.getLongitude()));
+
+
+        // GET POSTS HERE, SO NEED TO LIMIT THE QUERY IN THIS SPACE
         Task<QuerySnapshot> postsQuery = db.collection("posts").get();
+
+
+        // Location Calls
+//        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this.getActivity());
+
+
         OnGetDataListener listener = new OnGetDataListener() {
+
             @Override
             public void onSuccess(QuerySnapshot queryDocumentSnapshots) {
                 System.out.println("QuerySnapshot: " + queryDocumentSnapshots);
+//                deviceLocation = getDeviceLocation(PostsFragment.this.getActivity(), fusedLocationProviderClient, deviceLocation);
                 posts.clear();
                 for (int i = 0; i < queryDocumentSnapshots.size(); i++) {
                     HashMap<String, Object> post = (HashMap<String, Object>) queryDocumentSnapshots.getDocuments().get(i).getData();
@@ -52,6 +93,10 @@
                     //posts.add(new PostModel(queryDocumentSnapshots.getDocuments().get(i).getData()));
                     System.out.println(queryDocumentSnapshots.getDocuments().get(i).getData());
                 }
+
+                // sort posts based on distance smallest to largest
+//                Collections.sort(posts, new PostsByDistanceComparator(deviceLocation));
+
                 adapter = new PostRecyclerAdapter(rootView.getContext(), posts);
                 System.out.println("SETTONG UP ADAPTER DONE" + posts);
                 postRecyclerView.setLayoutManager(mLayoutManager);
@@ -87,4 +132,45 @@
             }
         });
     }
+
+
+
+    // location access
+    public LocationModel getDeviceLocation(Activity activity, FusedLocationProviderClient fusedLocationClient, LocationModel currentLocation){
+        System.out.println("FUSED LOCATION CLIENT INSIDE getLastLocation()" + fusedLocationClient);
+
+        if (ActivityCompat.checkSelfPermission(activity, android.Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
+            fusedLocationClient.getCurrentLocation(	100, null) // 100 is HIGH_ACCURACY
+                    .addOnSuccessListener(new OnSuccessListener<Location>() { // try addOnCompleteListener
+                        @Override
+                        public void onSuccess(Location location) {
+                            System.out.println("location object " + location);
+                            if (location != null) {
+                                double latitude = location.getLatitude();
+                                double longitude = location.getLongitude();
+                                System.out.println(String.valueOf(latitude) + " " + String.valueOf(longitude));
+                                currentLocation.setLatitude(latitude);
+                                currentLocation.setLongitude(longitude);
+                            }
+                        }
+
+                    })
+                    .addOnFailureListener(new OnFailureListener() {
+                        @Override
+                        public void onFailure(@NonNull Exception e) {
+                            Log.e("TAG", "Exception: " + e.getMessage());
+                            System.out.println("KEGAGALAN HAKIKI " + e.getMessage());
+                        }
+                    })
+            ;
+        } else {
+            askPermission(activity, fusedLocationClient);
+            return getDeviceLocation(activity, fusedLocationClient, currentLocation);
+        }
+        return currentLocation;
+    }
+
+    public void askPermission(Activity activity, FusedLocationProviderClient fusedLocationClient) {
+        ActivityCompat.requestPermissions(activity, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, COARSE_LOCATION_REQUEST_CODE);
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/just_hungry/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.just_hungry;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_nav_bar);\r\n        bottomNavigationView.setOnItemSelectedListener(this::onNavigationItemSelected);\r\n\r\n        if (savedInstanceState == null) {\r\n            getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, new PostsFragment()).commit();\r\n            bottomNavigationView.setSelectedItemId(R.id.action_posts);\r\n        }\r\n\r\n    }\r\n\r\n    private boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        Fragment selectedFragment = new PostsFragment();\r\n\r\n        switch (item.getItemId()) {\r\n            case R.id.action_posts:\r\n                selectedFragment = new PostsFragment();\r\n                break;\r\n            case R.id.action_addorder:\r\n                selectedFragment = new AddOrderFragment();\r\n                break;\r\n            case R.id.action_yourorder:\r\n                selectedFragment = new YourOrderFragment();\r\n                break;\r\n            default:\r\n                return false;\r\n        }\r\n\r\n        getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, selectedFragment).commit();\r\n        return true;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/just_hungry/MainActivity.java b/app/src/main/java/com/example/just_hungry/MainActivity.java
--- a/app/src/main/java/com/example/just_hungry/MainActivity.java	
+++ b/app/src/main/java/com/example/just_hungry/MainActivity.java	
@@ -7,9 +7,21 @@
 import android.os.Bundle;
 import android.view.MenuItem;
 
+import com.example.just_hungry.models.LocationModel;
+import com.google.android.gms.location.FusedLocationProviderClient;
+import com.google.android.gms.location.LocationServices;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 
+import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+
 public class MainActivity extends AppCompatActivity {
+    FusedLocationProviderClient fusedLocationClient;
+    DeviceLocationRetriever deviceLocationRetriever;
+    LocationModel currentDeviceLocation = new LocationModel();
+
 
 
     @Override
@@ -19,12 +31,40 @@
 
         BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_nav_bar);
         bottomNavigationView.setOnItemSelectedListener(this::onNavigationItemSelected);
+        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);
 
         if (savedInstanceState == null) {
             getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, new PostsFragment()).commit();
             bottomNavigationView.setSelectedItemId(R.id.action_posts);
         }
 
+        // FusedLocationProvider client
+//        FusedLocationProviderClient fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);
+//        System.out.println("FUSED LOCATION CLIENT" + fusedLocationClient);
+//
+//        // Executor service
+//        ExecutorService executorService = Executors.newSingleThreadExecutor();
+//
+//
+//        // TODO: ASYNC PROBLEM, TRIED A FEW WAYS GAK BISA
+//        // Get Device Location Here
+////        deviceLocationRetriever = new DeviceLocationRetriever(this, fusedLocationClient, currentDeviceLocation);
+//        executorService.execute(new DeviceLocationRetriever(this, fusedLocationClient, currentDeviceLocation));
+//        executorService.execute(new RunnablePrintTester(currentDeviceLocation.latitude, currentDeviceLocation.longitude));
+//        executorService.shutdown();
+
+
+        //        deviceLocationRetriever.getLastLocation(currentDeviceLocation, this, fusedLocationClient); // isDone
+//        CompletableFuture<LocationModel> currentDeviceLocationTask = CompletableFuture.supplyAsync(() -> {
+//            return deviceLocationRetriever.getLastLocation(currentDeviceLocation, this, fusedLocationClient);
+//        });
+//
+//        currentDeviceLocationTask.thenAccept(currentLocation -> {
+//            currentDeviceLocation = currentLocation;
+//        });
+        // after isDone
+
+
     }
 
     private boolean onNavigationItemSelected(@NonNull MenuItem item) {
@@ -48,4 +88,23 @@
         return true;
     }
 
+//    @Override
+//    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+//        deviceLocationRetriever = new DeviceLocationRetriever();
+//
+//        if (requestCode == 100) {
+//            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+//
+//                currentDeviceLocation = deviceLocationRetriever.getLastLocation(this, fusedLocationClient);
+//            } else {
+//                Toast.makeText(this, "Required Permission", Toast.LENGTH_SHORT).show();
+//            }
+//        }
+//
+//
+//        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+//    }
+
+
+
 }
Index: .idea/deploymentTargetDropDown.xml
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/.idea/deploymentTargetDropDown.xml	
+++ /dev/null	
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <targetSelectedWithDropDown>
-      <Target>
-        <type value="QUICK_BOOT_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\Zephyrus G14\.android\avd\Pixel_5_API_28_2.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2023-03-08T05:11:45.075154200Z" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	
+++ /dev/null	
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 33\r\n\r\n    defaultConfig {\r\n        applicationId 'com.imba.hungrybees'\r\n        minSdk 28\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation platform('com.google.firebase:firebase-bom:31.2.3')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.google.firebase:firebase-firestore'\r\n    implementation 'androidx.appcompat:appcompat:1.6.0'\r\n    implementation 'com.google.android.material:material:1.8.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.5'\r\n    implementation 'com.google.android.gms:play-services-location:21.0.1'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n    implementation 'com.firebaseui:firebase-ui-auth:7.2.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.12.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'\r\n    // FirebaseUI for Firebase Realtime Database\r\n    implementation 'com.firebaseui:firebase-ui-database:8.0.2'\r\n\r\n    // FirebaseUI for Cloud Firestore\r\n    implementation 'com.firebaseui:firebase-ui-firestore:8.0.2'\r\n\r\n    // FirebaseUI for Firebase Auth\r\n    implementation 'com.firebaseui:firebase-ui-auth:8.0.2'\r\n\r\n    // FirebaseUI for Cloud Storage\r\n    implementation 'com.firebaseui:firebase-ui-storage:8.0.2'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -35,6 +35,7 @@
     implementation platform('com.google.firebase:firebase-bom:31.2.3')
     implementation 'com.google.firebase:firebase-analytics'
     implementation 'com.google.firebase:firebase-firestore'
+    implementation 'androidx.core:core:1.6.0'
     implementation 'androidx.appcompat:appcompat:1.6.0'
     implementation 'com.google.android.material:material:1.8.0'
     implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
Index: app/src/main/java/com/example/just_hungry/PostsByDistanceComparator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/just_hungry/PostsByDistanceComparator.java b/app/src/main/java/com/example/just_hungry/PostsByDistanceComparator.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/just_hungry/PostsByDistanceComparator.java	
@@ -0,0 +1,62 @@
+package com.example.just_hungry;
+
+import com.example.just_hungry.models.LocationModel;
+import com.example.just_hungry.models.PostModel;
+
+import java.util.Comparator;
+
+public class PostsByDistanceComparator implements Comparator<PostModel> {
+
+    LocationModel currentDeviceLocation;
+
+    public PostsByDistanceComparator() {
+        this.currentDeviceLocation = new LocationModel(0,0);
+    }
+
+    public PostsByDistanceComparator(LocationModel currentDeviceLocation) {
+        this.currentDeviceLocation = currentDeviceLocation;
+    }
+
+    @Override
+    public int compare(PostModel post1, PostModel post2) {
+        // posts latitude and longitude
+        double lat1 = post1.getLocation().getLatitude();
+        double lat2 = post2.getLocation().getLatitude();
+        double lon1 = post1.getLocation().getLongitude();
+        double lon2 = post2.getLocation().getLongitude();
+
+        // device latitude and longitude
+        double latDevice = currentDeviceLocation.getLatitude();
+        double lonDevice = currentDeviceLocation.getLongitude();
+
+        // device distance to each post
+        double distToPost1 = distFrom(latDevice, lonDevice, lat1, lon1);
+        double distToPost2 = distFrom(latDevice, lonDevice, lat2, lon2);
+
+        if (distToPost1 < distToPost2) {
+            return 1;
+        }
+        else if (distToPost1 == distToPost2) {
+            return 0;
+        }
+        else {
+            return -1;
+        }
+
+    }
+
+    public static double distFrom(double lat1, double lon1, double lat2, double lon2) {
+        double earthRadius = 3958.75; // miles (or 6371.0 kilometers)
+        double dLat = Math.toRadians(lat2-lat1);
+        double dLng = Math.toRadians(lon2-lon1);
+        double sindLat = Math.sin(dLat / 2);
+        double sindLng = Math.sin(dLng / 2);
+        double a = Math.pow(sindLat, 2) + Math.pow(sindLng, 2)
+                * Math.cos(Math.toRadians(lat1)) * Math.cos(Math.toRadians(lat2));
+        double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
+        double dist = earthRadius * c;
+
+        return dist;
+    }
+
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.2525\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/ic_baseline_arrow_back_24.xml\" value=\"0.3455\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/ic_baseline_email_24.xml\" value=\"0.3465\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/ic_baseline_password_24.xml\" value=\"0.2525\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.2525\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/rendang_background.xml\" value=\"0.2525\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/activity_main.xml\" value=\"0.13172043010752688\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/base_layout.xml\" value=\"0.34375\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/bottom_nav_bar.xml\" value=\"0.34479166666666666\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/bottom_navigation_menu.xml\" value=\"0.34375\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/content_main.xml\" value=\"0.34479166666666666\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/fragment_order.xml\" value=\"0.246875\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/fragment_your_order.xml\" value=\"0.246875\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/header_view.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/home_posts_main.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/login_page.xml\" value=\"0.34479166666666666\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/post_item.xml\" value=\"0.34479166666666666\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/post_main.xml\" value=\"0.34479166666666666\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/post_row.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/top_nav_bar.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/menu/bottom_navigation_menu.xml\" value=\"0.34479166666666666\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/menu/menu_main.xml\" value=\"0.34479166666666666\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/menu/top_nav_menu.xml\" value=\"0.25859375\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\" value=\"0.2525\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/mipmap-anydpi-v26/rendang.xml\" value=\"0.2155\" />\r\n        <entry key=\"..\\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/mipmap-anydpi-v26/rendang_round.xml\" value=\"0.2155\" />\r\n        <entry key=\"..\\:/SUTD School Works/hungrybees/app/src/main/res/layout/activity_main.xml\" value=\"0.16770833333333332\" />\r\n        <entry key=\"..\\:/SUTD School Works/hungrybees/app/src/main/res/layout/content_main.xml\" value=\"0.24791666666666667\" />\r\n        <entry key=\"..\\:/SUTD School Works/hungrybees/app/src/main/res/layout/fragment_first.xml\" value=\"0.24791666666666667\" />\r\n        <entry key=\"..\\:/SUTD School Works/hungrybees/app/src/main/res/layout/fragment_second.xml\" value=\"0.24791666666666667\" />\r\n        <entry key=\"..\\:/SUTD School Works/hungrybees/app/src/main/res/layout/home_posts_main.xml\" value=\"0.28541666666666665\" />\r\n        <entry key=\"..\\:/SUTD School Works/hungrybees/app/src/main/res/layout/login_page.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/SUTD School Works/hungrybees/app/src/main/res/layout/post_item.xml\" value=\"0.75\" />\r\n        <entry key=\"..\\:/SUTD School Works/hungrybees/app/src/main/res/layout/post_row.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/SUTD School Works/hungrybees/app/src/main/res/layout/sign_in_page.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/SUTD School Works/just-hungry/app/src/main/res/drawable/ic_baseline_email_24.xml\" value=\"0.3295\" />\r\n        <entry key=\"..\\:/SUTD School Works/just-hungry/app/src/main/res/drawable/ic_baseline_password_24.xml\" value=\"0.3295\" />\r\n        <entry key=\"..\\:/SUTD School Works/just-hungry/app/src/main/res/layout/activity_main.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/SUTD School Works/just-hungry/app/src/main/res/layout/content_main.xml\" value=\"0.2552083333333333\" />\r\n        <entry key=\"..\\:/SUTD School Works/just-hungry/app/src/main/res/layout/fragment_first.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/SUTD School Works/just-hungry/app/src/main/res/layout/fragment_second.xml\" value=\"0.34479166666666666\" />\r\n        <entry key=\"..\\:/SUTD School Works/just-hungry/app/src/main/res/layout/login_page.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/SUTD School Works/just-hungry/app/src/main/res/menu/menu_main.xml\" value=\"0.34479166666666666\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,54 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="DesignSurface">
-    <option name="filePathToZoomLevelMap">
-      <map>
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable-v24/ic_launcher_foreground.xml" value="0.2525" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/ic_baseline_arrow_back_24.xml" value="0.3455" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/ic_baseline_email_24.xml" value="0.3465" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/ic_baseline_password_24.xml" value="0.2525" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/ic_launcher_background.xml" value="0.2525" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/drawable/rendang_background.xml" value="0.2525" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/activity_main.xml" value="0.13172043010752688" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/base_layout.xml" value="0.34375" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/bottom_nav_bar.xml" value="0.34479166666666666" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/bottom_navigation_menu.xml" value="0.34375" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/content_main.xml" value="0.34479166666666666" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/fragment_order.xml" value="0.246875" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/fragment_your_order.xml" value="0.246875" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/header_view.xml" value="0.5" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/home_posts_main.xml" value="0.25" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/login_page.xml" value="0.34479166666666666" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/post_item.xml" value="0.34479166666666666" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/post_main.xml" value="0.34479166666666666" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/post_row.xml" value="0.33" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/layout/top_nav_bar.xml" value="0.67" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/menu/bottom_navigation_menu.xml" value="0.34479166666666666" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/menu/menu_main.xml" value="0.34479166666666666" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/menu/top_nav_menu.xml" value="0.25859375" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml" value="0.2525" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/mipmap-anydpi-v26/rendang.xml" value="0.2155" />
-        <entry key="..\:/SUTD School Works/50.001 Information System and Programming/hungrybees/app/src/main/res/mipmap-anydpi-v26/rendang_round.xml" value="0.2155" />
-        <entry key="..\:/SUTD School Works/hungrybees/app/src/main/res/layout/activity_main.xml" value="0.16770833333333332" />
-        <entry key="..\:/SUTD School Works/hungrybees/app/src/main/res/layout/content_main.xml" value="0.24791666666666667" />
-        <entry key="..\:/SUTD School Works/hungrybees/app/src/main/res/layout/fragment_first.xml" value="0.24791666666666667" />
-        <entry key="..\:/SUTD School Works/hungrybees/app/src/main/res/layout/fragment_second.xml" value="0.24791666666666667" />
-        <entry key="..\:/SUTD School Works/hungrybees/app/src/main/res/layout/home_posts_main.xml" value="0.28541666666666665" />
-        <entry key="..\:/SUTD School Works/hungrybees/app/src/main/res/layout/login_page.xml" value="0.5" />
-        <entry key="..\:/SUTD School Works/hungrybees/app/src/main/res/layout/post_item.xml" value="0.75" />
-        <entry key="..\:/SUTD School Works/hungrybees/app/src/main/res/layout/post_row.xml" value="0.33" />
-        <entry key="..\:/SUTD School Works/hungrybees/app/src/main/res/layout/sign_in_page.xml" value="0.33" />
-        <entry key="..\:/SUTD School Works/just-hungry/app/src/main/res/drawable/ic_baseline_email_24.xml" value="0.3295" />
-        <entry key="..\:/SUTD School Works/just-hungry/app/src/main/res/drawable/ic_baseline_password_24.xml" value="0.3295" />
-        <entry key="..\:/SUTD School Works/just-hungry/app/src/main/res/layout/activity_main.xml" value="0.33" />
-        <entry key="..\:/SUTD School Works/just-hungry/app/src/main/res/layout/content_main.xml" value="0.2552083333333333" />
-        <entry key="..\:/SUTD School Works/just-hungry/app/src/main/res/layout/fragment_first.xml" value="0.33" />
-        <entry key="..\:/SUTD School Works/just-hungry/app/src/main/res/layout/fragment_second.xml" value="0.34479166666666666" />
-        <entry key="..\:/SUTD School Works/just-hungry/app/src/main/res/layout/login_page.xml" value="0.33" />
-        <entry key="..\:/SUTD School Works/just-hungry/app/src/main/res/menu/menu_main.xml" value="0.34479166666666666" />
-      </map>
-    </option>
-  </component>
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
